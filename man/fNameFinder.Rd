% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2DLTfunctions.r
\name{fNameFinder}
\alias{fNameFinder}
\title{Find a function name when the function is passed as an argument into other functions.}
\usage{
fNameFinder(x, fSearchSting = "fName")
}
\arguments{
\item{x}{an R function/method that has not been evaluated.}

\item{fSearchSting='fName'}{function name search string}
}
\value{
Returns a character string e.g. "fName='f1'" that can be evaluated using 
\code{eval(parse(text="fName='f1'") } either outside of a function, see example or within the scope of a function.
}
\description{
Find a function name when the function is passed as an argument into other functions.
}
\details{
The function passed into x the x argument must have the object \code{fSearchSting} 
within its body.  The fSearchSting must be the only code on a line within the function,
but can be placed anywhere in the function body, e.g. \code{fName='f1'}. See examples.
}
\examples{
##Example 1 - check this approach works with nested functions
f1=function(x) {
fName='f1'
x**2}

f2=function(f,y){
 res=f(x=y)
 funcName1=fNameFinder(f)
 return(list(res,funcName1))}

f3=function(f,y){
 res=f2(f,y)
 return(res)}

eval(parse(text=f3(f=f1,y=2)[[2]]))

}

